version: '3.8'

services:
  db:
    image: mysql:8.4.0
    container_name: db
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -u${MYSQL_USER} -p${MYSQL_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5

  adminer:
    image: adminer
    container_name: adminer
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8080:8080"

  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: api
    depends_on:
      db:
        condition: service_healthy
    environment:
      MYSQL_HOST: db
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - ./backend:/app
    ports:
      - "5000:5000"
    command: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "5000", "--reload"]

  react:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: react
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - WATCHPACK_POLLING=true
    command: ["npm", "start"]

volumes:
  db_data:
